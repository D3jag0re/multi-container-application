name: Build > Deploy

# [X] Build droplet 

on:
    push:
      branches: [doom]
    workflow_dispatch: # Trigger manually from the Actions tab      

jobs:
 build_droplet:
   runs-on: ubuntu-latest
   outputs:
    id: ${{ steps.dropletOutputs.outputs.id}}
    ipv4: ${{ steps.dropletOutputs.outputs.ipv4}}
    name: ${{ steps.dropletOutputs.outputs.name}}

   steps:
     - name: Checkout repository
       uses: actions/checkout@v4
        
     - name: Install Terraform
       uses: hashicorp/setup-terraform@v3
       with:
        terraform_version: 1.10.2
    
     - name: Set D_O S3Var
       run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.DO_SPACES_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.DO_SPACES_SECRET_KEY }}" >> $GITHUB_ENV
       
     - name: Terraform Init
       run: terraform init
       working-directory: ./terraform
       env:
        DO_TOKEN: ${{ secrets.DO_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET_KEY }}

     - name: Terraform Apply
       id: apply
       run: |
         terraform apply -auto-approve \
          -var "do_token=${{ secrets.DO_TOKEN }}" \
          -var "public_key=${{ secrets.DO_SSH_PUBLIC_KEY }}"
       working-directory: ./terraform
       env:
        DO_TOKEN: ${{ secrets.DO_TOKEN }}
      
     - name: Get Droplet Outputs
       id: dropletOutputs
       run: |
        DROPLET_INFO=$(terraform output -json droplet_info)
        echo "id=$(echo $DROPLET_INFO | jq -r '.id')" >> $GITHUB_OUTPUT
        echo "ipv4=$(echo $DROPLET_INFO | jq -r '.ipv4')" >> $GITHUB_OUTPUT
        echo "name=$(echo $DROPLET_INFO | jq -r '.name')" >> $GITHUB_OUTPUT
       working-directory: ./terraform

 ansible:
   runs-on: ubuntu-latest
   needs: build_droplet

   steps: 
    - name: Checkout repository
      uses: actions/checkout@v4

  

    - name: Install Ansible
      run: |
       sudo apt update
       sudo apt install software-properties-common
       sudo add-apt-repository --yes --update ppa:ansible/ansible
       sudo apt install ansible

    - name: rsync deployments
      uses: burnett01/rsync-deployments@7.0.1
      with:
        switches: -avzr --delete
        path: ./
        remote_path: /temp/
        remote_host: ${{ needs.build_droplet.outputs.ipv4 }}
        remote_user: root
        remote_key: ${{ secrets.DO_SSH_PRIVATE_KEY }} 

    - name: Run Ansible Playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        # Required, playbook filepath
        playbook: setup.yml
        # Optional, directory where playbooks live
        directory: ./ansible 
        # Optional, SSH private key
        key: ${{ secrets.DO_SSH_PRIVATE_KEY }} 
        # Optional, literal inventory file contents
        inventory: |
          [web]
          ${{ needs.build_droplet.outputs.ipv4 }} ansible_user=root
        # Optional, SSH known hosts file content
        #known_hosts: |
        #  example.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
        # Optional, additional flags to pass to ansible-playbook
        #options: |
        #  --inventory .hosts